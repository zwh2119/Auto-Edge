apiVersion: sedna.io/v1alpha1
kind: JointInferenceService
metadata:
  name: helmet-detection-inference-example
  namespace: default
spec:
  edgeWorker:
    model:
      name: "yolov5_edge_model"
    video:
      - id: 0
        description: "car"
        resolution: "1080p"
        fps: 25
        url: "rtsp://192.168.1.4/video0"
        pipeline:
          - service_name: "car_detection"
      - id: 1
        description: "car"
        resolution: "1080p"
        fps: 30
        url: "rtsp://192.168.1.4/video1"
        pipeline:
          - service_name: "car_detection"
      - id: 2
        description: "car"
        resolution: "1080p"
        fps: 30
        url: "rtsp://192.168.1.4/video2"
        pipeline:
          - service_name: "car_detection"

    template:
      spec:
        nodeName: $EDGE_NODE
        containers:
          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/car-detection-service-arm
            imagePullPolicy: IfNotPresent
            name: service_car_detection
            env: # user defined environments
              - name: "weights"
                value: "yolov5s.pt"
              - name: "device"
                value: "cuda:0"

          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/controller-arm
            imagePullPolicy: IfNotPresent
            name: controller
            env:
              - name: "cloud_ip"
                value: "114.212.81.11"
              - name: "controller_port"
                value: 9002
              - name: "distributor_port"
                value: 5713
              - name: "car_detection_port"
                value: 9001

          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/generator-arm
            imagePullPolicy: IfNotPresent
            name: generator
            env:
              - name: "cloud_ip"
                value: "114.212.81.11"
              - name: "controller_port"
                value: 9002
              - name: "scheduler_port"
                value: 8140
              - name: "buffer_size"
                value: 16
              - name: "encoding"
                value: "mp4v"

  cloudWorker:
    model:
      name: "yolov5_cloud_model"

    template:
      spec:
        nodeName: $CLOUD_NODE
        containers:
          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/car-detection-service
            name: service_car_detection
            imagePullPolicy: IfNotPresent
            env: # user defined environments
              - name: "weights"
                value: "yolov5s.pt"
              - name: "device"
                value: "cuda:0"

          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/controller
            name: controller
            imagePullPolicy: IfNotPresent
            env:
              - name: "cloud_ip"
                value: "114.212.81.11"
              - name: "controller_port"
                value: 9002
              - name: "distributor_port"
                value: 5713
              - name: "car_detection_port"
                value: 9001

          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/distributor
            name: distributor
            imagePullPolicy: IfNotPresent
            env:
              - name: "cloud_ip"
                value: "114.212.81.11"
              - name: "scheduler_port"
                value: 8140
              - name: "record_dir"
                value: "/data/record_data"
            volumeMounts:
              - name: output_dir
                mountPath: /data

          - image: registry.cn-hangzhou.aliyuncs.com/auto-edge/scheduler
            name: scheduler
            imagePullPolicy: IfNotPresent
            env:
              - name: "cloud_ip"
                value: "114.212.81.11"
              - name: "edge_ip"
                value: "192.168.1.2"
              - name: "controller_port"
                value: 9002
              - name: "user_constraint"
                value: 0.3

        volumes: # user defined volumes
          - name: output_dir
            hostPath:
              # user must create the directory in host
              path: /car_detection/output
              type: Directory

