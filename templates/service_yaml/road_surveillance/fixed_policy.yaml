apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: generator
  namespace: auto-edge
spec:
  edgeWorker:
    - file:
        path: "/home/nvidia/zwh/Auto-Edge-files/files"
      logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/generator:v2.0.0
            imagePullPolicy: IfNotPresent
            name: generator
            env:
              - name: scheduler_port
                value: "39400"
              - name: controller_port
                value: "39200"
              - name: scheduler_name
                value: cloud.kubeedge
              - name: GEN_FILTER_NAME
                value: simple
              - name: GEN_PROCESS_NAME
                value: simple
              - name: GEN_COMPRESS_NAME
                value: simple
              - name: GEN_BSO_NAME
                value: simple
              - name: GEN_ASO_NAME
                value: simple
    - file:
        path: "/home/nvidia/zwh/Auto-Edge-files/files"
      logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
            - image: onecheck/generator:v2.0.0
              imagePullPolicy: IfNotPresent
              name: generator
              env:
                - name: scheduler_port
                  value: "39400"
                - name: controller_port
                  value: "39200"
                - name: scheduler_name
                  value: cloud.kubeedge
                - name: GEN_FILTER_NAME
                  value: simple
                - name: GEN_PROCESS_NAME
                  value: simple
                - name: GEN_COMPRESS_NAME
                  value: simple
                - name: GEN_BSO_NAME
                  value: simple
                - name: GEN_ASO_NAME
                  value: simple

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: controller
  namespace: auto-edge
spec:
  edgeWorker:
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/controller:v2.0.0
            imagePullPolicy: IfNotPresent
            name: controller
            env:
              - name: service_port
                value: '{"car_detection": 39001}'
              - name: distributor_port
                value: "39500"
              - name: controller_port
                value: "39200"
              - name: distributor_name
                value: cloud.kubeedge
            ports:
              - containerPort: 9200
                hostPort: 39200
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/controller:v2.0.0
            imagePullPolicy: IfNotPresent
            name: controller
            env:
              - name: service_port
                value: '{"car_detection": 39001}'
              - name: distributor_port
                value: "39500"
              - name: controller_port
                value: "39200"
              - name: distributor_name
                value: cloud.kubeedge
            ports:
              - containerPort: 9200
                hostPort: 39200
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/controller:v2.0.0
            name:  controller
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: service_port
                value: '{"car_detection": 39001}'
              - name: distributor_port
                value: "39500"
              - name: controller_port
                value: "39200"
              - name: distributor_name
                value: cloud.kubeedge
            ports:
              - containerPort: 9200
                hostPort: 39200

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: distributor
  namespace: auto-edge
spec:
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/distributor:v2.0.0
            name:  distributor
            imagePullPolicy: IfNotPresent
            env: # user defined environments
              - name: "output_dir"
                value: "/data/record_data"
              - name: scheduler_port
                value: "39400"
              - name: scheduler_name
                value: cloud.kubeedge
            ports:
              - containerPort: 9500
                hostPort: 39500


---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: scheduler
  namespace: auto-edge
spec:
  cloudWorker:
    file:
      path: "/home/hx/zwh/Auto-Edge-files/files"
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/scheduler:v2.0.0
            name:  scheduler
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: user_constraint
                value: "0.5"
              - name: cloud_name
                value: cloud.kubeedge
              - name: SCH_CONFIG_NAME
                value: simple
              - name: SCH_SCENARIO_NAME
                value: simple
              - name: SCH_STARTUP_NAME
                value: fixed
              - name: SCH_AGENT_NAME
                value: fixed
              - name: SCH_AGENT_PARAMETERS
                value: "{'fixed_policy':{'resolution': '720p','fps': 30,'encoding': 'mp4v','batch_size': 8,'pipeline':0}}"
            ports:
              - containerPort: 9400
                hostPort: 39400

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: monitor
  namespace: auto-edge
spec:
  edgeWorker:
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/monitor:v2.0.0
            imagePullPolicy: IfNotPresent
            name: monitor
            env:
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "False"
              - name: iperf3_port
                value: "35201"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/monitor:v2.0.0
            imagePullPolicy: IfNotPresent
            name: monitor
            env:
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "False"
              - name: iperf3_port
                value: "35202"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/monitor:v2.0.0
            name:  monitor
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "True"
              - name: iperf3_ports
                value: "[5201]"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
            ports:
              - containerPort: 5201
                hostPort: 35201
              - containerPort: 5202
                hostPort: 35202

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: processor-car-detection
  namespace: auto-edge
spec:
  edgeWorker:
    - file:
        path: "/home/nvidia/zwh/Auto-Edge-files/model_lib"
      kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/car-detection:v2.0.0
            imagePullPolicy: IfNotPresent
            name: car-detection
            env:
              - name: processor_type
                value: "PRO_DETECTOR"
              - name: PRO_DETECTOR_NAME
                value: "car_detection"
              - name: PRO_DETECTOR_PARAMETERS
                value: "{'weights':'yolov5s.engine', 'plugin':'libmyplugins.so'}"
              - name: controller_port
                value: "39200"
              - name: processor_inner_port
                value: "9001"
              - name: PRO_QUEUE_NAME
                value: "simple"
              - name: service_name
                value: "car_detection"
            ports:
              - containerPort: 9001
                hostPort: 39001
    - file:
        path: "/home/nvidia/zwh/Auto-Edge-files/model_lib"
      kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/car-detection:v2.0.0
            imagePullPolicy: IfNotPresent
            name: car-detection
            env:
              - name: processor_type
                value: "PRO_DETECTOR"
              - name: PRO_DETECTOR_NAME
                value: "car_detection"
              - name: PRO_DETECTOR_PARAMETERS
                value: "{'weights':'yolov5s.engine', 'plugin':'libmyplugins.so'}"
              - name: controller_port
                value: "39200"
              - name: processor_inner_port
                value: "9001"
              - name: PRO_QUEUE_NAME
                value: "simple"
              - name: service_name
                value: "car_detection"
            ports:
              - containerPort: 9001
                hostPort: 39001
  cloudWorker:
    file:
      path: "/home/hx/zwh/Auto-Edge-files/model_lib"
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/car-detection:v2.0.0
            name:  car-detection
            env:
              - name: processor_type
                value: "PRO_DETECTOR"
              - name: PRO_DETECTOR_NAME
                value: "car_detection"
              - name: PRO_DETECTOR_PARAMETERS
                value: "{'weights':'yolov5s.engine', 'plugin':'libmyplugins.so'}"
              - name: controller_port
                value: "39200"
              - name: processor_inner_port
                value: "9001"
              - name: PRO_QUEUE_NAME
                value: "simple"
              - name: service_name
                value: "car_detection"
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 9001
                hostPort: 39001

