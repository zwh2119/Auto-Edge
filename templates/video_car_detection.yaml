apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: generator
  namespace: auto-edge
spec:
  edgeWorker:
    - file:
        path: "/home/nvidia/zwh/Auto-Edge/files-mid"
      logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/generator:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: generator
            env:
              - name: scheduler_port
                value: "39400"
              - name: controller_port
                value: "39200"
              - name: scheduler_name
                value: cloud.kubeedge
    - file:
        path: "/home/nvidia/zwh/Auto-Edge/files-mid"
      logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
            - image: onecheck/generator:mid-v1.0.0
              imagePullPolicy: IfNotPresent
              name: generator
              env:
                - name: scheduler_port
                  value: "39400"
                - name: controller_port
                  value: "39200"
                - name: scheduler_name
                  value: cloud.kubeedge
---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: controller
  namespace: auto-edge
spec:
  edgeWorker:
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/controller:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: controller
            env:
              - name: service_port
                value: '{"car-detection": 39001, "license-plate-detection": 39002}'
              - name: distributor_port
                value: "39500"
              - name: distributor_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
            ports:
              - containerPort: 9200
                hostPort: 39200
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/controller:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: controller
            env:
              - name: service_port
                value: '{"car-detection": 39001, "license-plate-detection": 39002}'
              - name: distributor_port
                value: "39500"
              - name: distributor_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
            ports:
              - containerPort: 9200
                hostPort: 39200
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/controller:mid-v1.0.0
            name:  controller
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: service_port
                value: '{"car-detection": 39001, "license-plate-detection": 39002}'
              - name: distributor_port
                value: "39500"
              - name: distributor_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
            ports:
              - containerPort: 9200
                hostPort: 39200

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: distributor
  namespace: auto-edge
spec:
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/distributor:mid-v1.0.0
            name:  distributor
            imagePullPolicy: IfNotPresent
            env: # user defined environments
              - name: "output_dir"
                value: "/data/record_data"
              - name: scheduler_port
                value: "39400"
              - name: scheduler_name
                value: cloud.kubeedge
            ports:
              - containerPort: 9500
                hostPort: 39500


---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: scheduler
  namespace: auto-edge
spec:
  cloudWorker:
    file:
      path: "/home/hx/zwh/Auto-Edge/files-mid"
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/scheduler:mid-v1.0.0
            name:  scheduler
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: user_constraint
                value: "0.1"
              - name: controller_port
                value: "39200"
              - name: importance_weight
                value: "0.4"
              - name: urgency_weight
                value: "0.6"
            ports:
              - containerPort: 9400
                hostPort: 39400

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: monitor
  namespace: auto-edge
spec:
  edgeWorker:
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/monitor:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: monitor
            env:
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "False"
              - name: iperf3_port
                value: "35201"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
    - logLevel:
        level: "DEBUG"
      kubeConfig:
        path: "/home/nvidia/.kube"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/monitor:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: monitor
            env:
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "False"
              - name: iperf3_port
                value: "35202"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/monitor:mid-v1.0.0
            name:  monitor
            imagePullPolicy: IfNotPresent
            env:  # user defined environments
              - name: interval
                value: "5"
              - name: iperf3_server
                value: "True"
              - name: iperf3_ports
                value: "[5201, 5202]"
              - name: iperf3_server_name
                value: cloud.kubeedge
              - name: scheduler_name
                value: cloud.kubeedge
              - name: scheduler_port
                value: "39400"
            ports:
              - containerPort: 5201
                hostPort: 35201
              - containerPort: 5202
                hostPort: 35202

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: car-detection-service
  namespace: auto-edge
spec:
  edgeWorker:
    - file:
        path: "/home/nvidia/zwh/Auto-Edge/model_lib"
      kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/car-detection:arm64-mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: car-detection
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9001
                hostPort: 39001
    - file:
        path: "/home/nvidia/zwh/Auto-Edge/model_lib"
      kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/car-detection:arm64-mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: car-detection
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9001
                hostPort: 39001
  cloudWorker:
    file:
      path: "/home/hx/zwh/Auto-Edge/model_lib"
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/car-detection:mid-v1.0.0
            name:  car-detection
            imagePullPolicy: IfNotPresent
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9001
                hostPort: 39001

---

apiVersion: sedna.io/v1alpha1
kind: JointMultiEdgeService
metadata:
  name: license-plate-detection-service
  namespace: auto-edge
spec:
  edgeWorker:
    - kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge1
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/license-plate-detection:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: license-plate-detection
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9002
                hostPort: 39002
    - kubeConfig:
        path: "/home/nvidia/.kube"
      logLevel:
        level: "DEBUG"
      template:
        spec:
          nodeName: edge2
          dnsPolicy: ClusterFirstWithHostNet
          containers:
          - image: onecheck/license-plate-detection:mid-v1.0.0
            imagePullPolicy: IfNotPresent
            name: license-plate-detection
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9002
                hostPort: 39002
  cloudWorker:
    kubeConfig:
      path: "/home/hx/.kube"
    template:
      spec:
        nodeName: cloud.kubeedge
        dnsPolicy: ClusterFirstWithHostNet
        containers:
          - image: onecheck/license-plate-detection:mid-v1.0.0
            name:  license-plate-detection
            imagePullPolicy: IfNotPresent
            env:
              - name: controller_port
                value: "39200"
            ports:
              - containerPort: 9002
                hostPort: 39002
